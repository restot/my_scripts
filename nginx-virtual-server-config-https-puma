upstream puma {
        server unix:///home/$USER/$APP/tmp/sockets/puma.sock;
}
server {
        # SSL configuration
        #
 listen 443 ssl default_server;
 listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;
        root /home/g92ilya_icom/shawarma-provate/public;
        
        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;
        server_name $HOST www.$HOST;
        ssl_certificate /etc/letsencrypt/live/$HOST/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/$HOST/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
              
        try_files $uri $uri/index.html @puma;
        
        location /git_pull {
          proxy_pass http://0.0.0.0:9000/hooks/redeploy-webhook;
        }
        
        location @puma {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https; 
            proxy_set_header Host $http_host;
            proxy_redirect off;

            proxy_pass http://puma;
        }

        client_max_body_size 10M;
        keepalive_timeout 10;
}

server {
    if ($host = www.$HOST) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = $HOST) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80;
        listen [::]:80;

        server_name $HOST www.$HOST;
        return 404; # managed by Certbot




}
